package ma.markware.charybdis.apt.domain;

import com.datastax.oss.driver.api.core.cql.Row;
import com.datastax.oss.driver.api.core.data.UdtValue;
import com.datastax.oss.driver.api.core.type.UserDefinedType;
import com.datastax.oss.driver.internal.core.type.UserDefinedTypeBuilder;
import java.lang.Class;
import java.lang.Integer;
import java.lang.String;
import ma.markware.charybdis.model.datatype.DataTypeMapper;
import ma.markware.charybdis.model.field.metadata.UdtFieldMetadata;
import ma.markware.charybdis.model.field.metadata.UdtMetadata;

public class Address_Udt implements UdtMetadata<Address> {
  public static final UdtFieldMetadata<Integer> number = new UdtFieldMetadata<Integer>() {
    public String getName() {
      return "number";
    }

    public Class getFieldClass() {
      return int.class;
    }

    public Integer serialize(Integer field) {
      return field;
    }

    public Integer deserialize(UdtValue udtValue) {
      return udtValue.get("number", int.class);
    }

    public Integer deserialize(String path, Row row) {
      return row.get(path, int.class);
    }
  };

  public static final UdtFieldMetadata<String> street = new UdtFieldMetadata<String>() {
    public String getName() {
      return "street";
    }

    public Class getFieldClass() {
      return java.lang.String.class;
    }

    public String serialize(String field) {
      return field;
    }

    public String deserialize(UdtValue udtValue) {
      return udtValue.get("street", java.lang.String.class);
    }

    public String deserialize(String path, Row row) {
      return row.get(path, java.lang.String.class);
    }
  };

  public static final UdtFieldMetadata<String> city = new UdtFieldMetadata<String>() {
    public String getName() {
      return "city";
    }

    public Class getFieldClass() {
      return java.lang.String.class;
    }

    public String serialize(String field) {
      return field;
    }

    public String deserialize(UdtValue udtValue) {
      return udtValue.get("city", java.lang.String.class);
    }

    public String deserialize(String path, Row row) {
      return row.get(path, java.lang.String.class);
    }
  };

  public static final UdtFieldMetadata<Country> country = new UdtFieldMetadata<Country>() {
    public String getName() {
      return "country";
    }

    public Class getFieldClass() {
      return ma.markware.charybdis.apt.domain.Country.class;
    }

    public UdtValue serialize(Country field) {
      return Country_Udt.country.serialize(field);
    }

    public Country deserialize(UdtValue udtValue) {
      return Country_Udt.country.deserialize(udtValue.getUdtValue("country"));
    }

    public Country deserialize(String path, Row row) {
      return Country_Udt.country.deserialize(row.getUdtValue(path));
    }
  };

  public static final Address_Udt address = new Address_Udt();

  public static final String KEYSPACE_NAME = "test_keyspace";

  public static final String UDT_NAME = "address";

  public static final UserDefinedType udt = new UserDefinedTypeBuilder(KEYSPACE_NAME, UDT_NAME).frozen()
  .withField("number", DataTypeMapper.getDataType(int.class))
  .withField("street", DataTypeMapper.getDataType(java.lang.String.class))
  .withField("city", DataTypeMapper.getDataType(java.lang.String.class))
  .withField("country", Country_Udt.country.udt).build();

  private Address_Udt() {
  }

  public String getKeyspaceName() {
    return KEYSPACE_NAME;
  }

  public String getUdtName() {
    return UDT_NAME;
  }

  public UdtValue serialize(Address entity) {
    return udt.newValue()
        .set("number", entity.getNumber(), int.class)
        .set("street", entity.getStreet(), java.lang.String.class)
        .set("city", entity.getCity(), java.lang.String.class)
        .setUdtValue("country", Country_Udt.country.serialize(entity.getCountry()));
  }

  public Address deserialize(UdtValue udtValue) {
    Address entity = new Address();
    entity.setNumber(number.deserialize(udtValue));
    entity.setStreet(street.deserialize(udtValue));
    entity.setCity(city.deserialize(udtValue));
    entity.setCountry(country.deserialize(udtValue));
    return entity;
  }
}
